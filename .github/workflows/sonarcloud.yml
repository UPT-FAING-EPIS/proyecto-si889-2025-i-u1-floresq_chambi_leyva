name: SonarCloud Analysis
on:
  push:
    branches:
      - main

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)/Doc2Markdown" >> $GITHUB_ENV  

      - name: Install Java 17
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk
          java -version

      - name: Install SonarScanner
        run: |
          curl -L "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip" -o sonar-scanner-linux.zip
          unzip sonar-scanner-linux.zip -d /opt
          sudo ln -s /opt/sonar-scanner-6.2.1.4610-linux-x64/bin/sonar-scanner /usr/local/bin/sonar-scanner
          sonar-scanner --version

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd Doc2Markdown/app  # Cambio aqu√≠ para que entre en la carpeta 'app' dentro de Doc2Markdown
          sonar-scanner \
            -Dsonar.projectKey=jaimeflores_doc2markdown \
            -Dsonar.organization=jaimeflores \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.python.coverage.reportPaths=report_coverage/coverage.xml  # Usar el reporte XML generado localmente

      - name: Configure Git for GitHub Pages
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Publish report to GitHub Pages
        run: |
          # Ensure we have the gh-pages branch
          git fetch origin gh-pages
          git checkout gh-pages
          
          # Create the htmlcov directory if it doesn't exist
          mkdir -p htmlcov
          
          # Copy the coverage reports from the correct location
          if [ -d "Doc2Markdown/report_coverage" ]; then
            cp -r Doc2Markdown/report_coverage/* htmlcov/
          elif [ -d "report_coverage" ]; then
            cp -r report_coverage/* htmlcov/
          else
            echo "Could not find coverage reports directory"
            exit 1
          fi
          
          git add htmlcov
          git commit -m "Publishing coverage reports [skip ci]" || echo "No changes to commit"
          git push origin gh-pages